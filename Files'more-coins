Main logo
Search for transactions, addresses, blocks and embedded text data...


API
API documentation
API documentation
Introduction
General stats endpoints
Retrieve overall information about blockchains and tokens
Dashboard endpoints
Retrieve information about various entities in a neat format from our databases
Bitcoin, Bitcoin Cash, Litecoin, Bitcoin SV, Dogecoin, Dash, Groestlcoin, Zcash, and Bitcoin Testnet
Ethereum
Second layers
Cross-chain checks
Raw data endpoints
Retrieve raw information about various entities directly from our full nodes
Infinitable endpoints
SQL-like queries: filter, sort, and aggregate blockchain data
Misc endpoints
Privacy-o-meter
News aggregator
Support
Show all
Blockchair API
Blockchair API
Blockchair API provides developers, researchers, and businesses with access to data contained in 14 blockchains
Explore pricing plans
Dashboard endpoints
Retrieve information about various entities in a neat format from our databases

The API supports a number of calls that produce some aggregated data, or data in a more convenient form for certain entities.

Dashboard endpoints for Bitcoin-like blockchains (Bitcoin, Bitcoin Cash, Litecoin, Bitcoin SV, Dogecoin, Dash, Groestlcoin, Zcash, eCash, Bitcoin Testnet)
Block info
Endpoints:

https://api.blockchair.com/{:btc_chain}/dashboards/block/{:height}₀
https://api.blockchair.com/{:btc_chain}/dashboards/block/{:hash}₀
https://api.blockchair.com/{:btc_chain}/dashboards/blocks/{:height}₀,...,{:height}ᵩ (up to 10 blocks, comma-separated)
https://api.blockchair.com/{:btc_chain}/dashboards/blocks/{:hash}₀,...,{:hash}ᵩ (up to 10 blocks, comma-separated)
Where:

{:btc_chain} can be one of these: bitcoin, bitcoin-cash, litecoin, bitcoin-sv, dogecoin, dash, groestlcoin, zcash, ecash, bitcoin/testnet
{:height}ᵢ is the block height (integer value), also known as block id
{:hash}ᵢ is the block hash (regex: /^[0-9a-f]{64}$/i)
Possible options:

?limit={:limit} limits the number of returned transaction hashes contained in the block. Default is 100. Maximum is 10000. In case of 0 returns an empty transaction hashes array
?offset={:offset} allows to paginate transaction hashes. Default is 0. Maximum is 1000000.
Output:

data contains an associative array where found block heights or block hashes used as keys:

data.{:id}ᵢ.block - information about the block (see Bitcoin-like block object for the field descriptions)
data.{:id}ᵢ.transactions - the array of transaction hashes (sorted by position in the block ascending) included in the block (respecting the set limit and offset)
Where {:id}ᵢ is either {:height}ᵢ or {:hash}ᵢ from the query string. If there's no {:id}ᵢ has been found in the database, there won't be such key.

Note that the total number of transactions in the block is contained in data.{:id}ᵢ.block.transaction_count

Context keys:

context.results — number of found blocks
context.limit — applied limit
context.offset — applied offset
context.state — best block height on the {:btc_chain} chain (tip: it's possible to calculate the number of confirmation block received using this formula: confirmations = context.state - data.{:id}ᵢ.block.id + 1)
Example requests:

https://api.blockchair.com/bitcoin/dashboards/block/0
https://api.blockchair.com/bitcoin/dashboards/block/000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
https://api.blockchair.com/bitcoin/dashboards/blocks/0,1,2,3,4,5,6,7,8,9
https://api.blockchair.com/bitcoin-cash/dashboards/block/556045?limit=10000
https://api.blockchair.com/bitcoin-cash/dashboards/block/556045?limit=10000&offset=10000
https://api.blockchair.com/bitcoin/dashboards/block/9999999
Example output:

https://api.blockchair.com/bitcoin/dashboards/block/0:

{
  "data": {
    "0": {
      "block": {
        "id": 0,
        "hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
        "date": "2009-01-03",
        "time": "2009-01-03 18:15:05",
        "median_time": "2009-01-03 18:15:05",
        "size": 285,
        "version": 1,
        "version_hex": "1",
        "version_bits": "000000000000000000000000000001",
        "merkle_root": "4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b",
        "nonce": 2083236893,
        "bits": 486604799,
        "difficulty": 1,
        "chainwork": "0000000000000000000000000000000000000000000000000000000100010001",
        "coinbase_data_hex": "04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73",
        "transaction_count": 1,
        "input_count": 1,
        "output_count": 1,
        "input_total": 0,
        "input_total_usd": 0,
        "output_total": 5000000000,
        "output_total_usd": 0,
        "fee_total": 0,
        "fee_total_usd": 0,
        "fee_per_kb": 0,
        "fee_per_kb_usd": 0,
        "cdd_total": 0,
        "generation": 5000000000,
        "generation_usd": 0,
        "reward": 5000000000,
        "reward_usd": 0,
        "guessed_miner": "Unknown"
      },
      "transactions": [
        "4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b"
      ]
    }
  ],
  "context": {
    "code": 200,
    "limit": 100,
    "offset": 0,
    "results": 1,
    "state": 555555,
    ...
    }
  }
}
Request cost formula:

1 for https://api.blockchair.com/{:btc_chain}/dashboards/block/{:height}₀ and https://api.blockchair.com/{:btc_chain}/dashboards/block/{:hash}₀ endpoints
1 + (0.1 * (entity count - 1)) for https://api.blockchair.com/{:btc_chain}/dashboards/blocks/{:height}₀,...,{:height}ᵩ and https://api.blockchair.com/{:btc_chain}/dashboards/blocks/{:hash}₀,...,{:hash}ᵩ endpoints (e.g. it's 1 + (0.1 * (10 - 1)) = 1.9 for requesting 10 blocks)
Explore visualizations on our front-end:

https://blockchair.com/bitcoin/block/0
https://blockchair.com/bitcoin-cash/block/0
https://blockchair.com/litecoin/block/0
https://blockchair.com/bitcoin-sv/block/0
https://blockchair.com/dogecoin/block/0
https://blockchair.com/dash/block/0
https://blockchair.com/groestlcoin/block/0
https://blockchair.com/zcash/block/0
https://blockchair.com/ecash/block/0
https://blockchair.com/bitcoin/testnet/block/0
Transaction info
Endpoints:

https://api.blockchair.com/{:chain}/dashboards/transaction/{:hash}₀
https://api.blockchair.com/{:chain}/dashboards/transactions/{:hash}₀,...,{:hash}ᵩ (up to 10 transactions, comma-separated)
Where:

{:chain} can be one of these: bitcoin, bitcoin-cash, litecoin, bitcoin-sv, dogecoin, dash, groestlcoin, zcash, ecash, bitcoin/testnet
{:hashᵢ} is the transaction hash (regex: /^[0-9a-f]{64}$/i), also known as txid
Possible options:

?omni=true (for bitcoin only; in alpha test mode) — shows information about Omni Layer token transfers in this transaction
Output:

data contains an associative array where found transaction hashes are used as keys:

data.{:hash}ᵢ.transaction — information about the transaction (see Bitcoin-like transaction object)
data.{:hash}ᵢ.inputs — the array of transaction inputs (sorted by spending_index ascending), where each element is a Bitcoin-like output object (inputs represented as spent outputs), or an empty array in case of coinbase transaction
data.{:hash}ᵢ.outputs — the array of transaction outputs (sorted by index ascending), where each element is a Bitcoin-like output object
Additional data:

data.{:hash}ᵢ.layer_2.omni (for bitcoin only; in alpha test mode) — Omni layer transaction data in case there's any
scripthash_type field for inputs and outputs (example: https://api.blockchair.com/bitcoin/dashboards/transaction/4d41241148a7cb8f4e2820d4393415ccd3d0793053a3855b44c33e5053c231ff) in the multisig_{:m}_of_{:n} format. Please note that if output is unspent, scripthash_type will always be null, even if the associated address multisig type can be derived from some other spent output.
data.{:hash}ᵢ.transaction.is_rbf (for bitcoin and bitcoin/testnet only) — yields true if the transaction can be replaced with a transaction with a higher fee (replace-by-fee), and false otherwise; for blockchain transactions it shows whether the transaction could've been replaced before it has been included into the block.
In case transaction is confirmed on the blockchain, data.{:hash}ᵢ.transaction.block_id contains the block number it's included in. If the transaction is in the mempool, data.{:hash}ᵢ.transaction.block_id yields -1. If the transaction is neither present in the blockchain, nor in the mempool, there won't be data.{:hash}ᵢ key with data.

Context keys:

context.results — number of found transactions
context.state — best block height on the {:chain} chain (tip: it's possible to calculate the number of confirmation transaction received using this formula: confirmations = data.{:id}ᵢ.transaction.block_id - context.state + 1, or if data.{:id}ᵢ.transaction.block_id is -1 it's an unconfirmed transaction)
Example requests:

https://api.blockchair.com/bitcoin/dashboards/block/0
https://api.blockchair.com/bitcoin/dashboards/blocks/0,1,2,3,4,5,6,7,8,9
https://api.blockchair.com/bitcoin-cash/dashboards/block/556045?limit=10000
https://api.blockchair.com/bitcoin-cash/dashboards/block/556045?limit=10000&offset=10000
https://api.blockchair.com/bitcoin/dashboards/block/9999999
Example output:

https://api.blockchair.com/bitcoin/dashboards/transaction/f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16:

{
  "data": {
    "f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16": {
      "transaction": {
        "block_id": 170,
        "id": 171,
        "hash": "f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16",
        "date": "2009-01-12",
        "time": "2009-01-12 03:30:25",
        "size": 275,
        "weight": 1100,
        "version": 1,
        "lock_time": 0,
        "is_coinbase": false,
        "has_witness": false,
        "input_count": 1,
        "output_count": 2,
        "input_total": 5000000000,
        "input_total_usd": 0.5,
        "output_total": 5000000000,
        "output_total_usd": 0.5,
        "fee": 0,
        "fee_usd": 0,
        "fee_per_kb": 0,
        "fee_per_kb_usd": 0,
        "fee_per_kwu": 0,
        "fee_per_kwu_usd": 0,
        "cdd_total": 149.15856481481,
        "is_rbf": false
      },
      "inputs": [
        {
          "block_id": 9,
          "transaction_id": 9,
          "index": 0,
          "transaction_hash": "0437cd7f8525ceed2324359c2d0ba26006d92d856a9c20fa0241106ee5a597c9",
          "date": "2009-01-09",
          "time": "2009-01-09 03:54:39",
          "value": 5000000000,
          "value_usd": 0.5,
          "recipient": "12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S",
          "type": "pubkey",
          "script_hex": "410411db93e1dcdb8a016b49840f8c53bc1eb68a382e97b1482ecad7b148a6909a5cb2e0eaddfb84ccf9744464f82e160bfa9b8b64f9d4c03f999b8643f656b412a3ac",
          "is_from_coinbase": true,
          "is_spendable": true,
          "is_spent": true,
          "spending_block_id": 170,
          "spending_transaction_id": 171,
          "spending_index": 0,
          "spending_transaction_hash": "f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16",
          "spending_date": "2009-01-12",
          "spending_time": "2009-01-12 03:30:25",
          "spending_value_usd": 0.5,
          "spending_sequence": 4294967295,
          "spending_signature_hex": "47304402204e45e16932b8af514961a1d3a1a25fdf3f4f7732e9d624c6c61548ab5fb8cd410220181522ec8eca07de4860a4acdd12909d831cc56cbbac4622082221a8768d1d0901",
          "spending_witness": "",
          "lifespan": 257746,
          "cdd": 149.158564814815,
          "scripthash_type": null
        }
      ],
      "outputs": [
        {
          "block_id": 170,
          "transaction_id": 171,
          "index": 0,
          "transaction_hash": "f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16",
          "date": "2009-01-12",
          "time": "2009-01-12 03:30:25",
          "value": 1000000000,
          "value_usd": 0.1,
          "recipient": "1Q2TWHE3GMdB6BZKafqwxXtWAWgFt5Jvm3",
          "type": "pubkey",
          "script_hex": "4104ae1a62fe09c5f51b13905f07f06b99a2f7159b2225f374cd378d71302fa28414e7aab37397f554a7df5f142c21c1b7303b8a0626f1baded5c72a704f7e6cd84cac",
          "is_from_coinbase": false,
          "is_spendable": true,
          "is_spent": true,
          "spending_block_id": 92240,
          "spending_transaction_id": 156741,
          "spending_index": 0,
          "spending_transaction_hash": "ea44e97271691990157559d0bdd9959e02790c34db6c006d779e82fa5aee708e",
          "spending_date": "2010-11-16",
          "spending_time": "2010-11-16 20:39:27",
          "spending_value_usd": 2.7,
          "spending_sequence": 4294967295,
          "spending_signature_hex": "4730440220576497b7e6f9b553c0aba0d8929432550e092db9c130aae37b84b545e7f4a36c022066cb982ed80608372c139d7bb9af335423d5280350fe3e06bd510e695480914f01",
          "spending_witness": "",
          "lifespan": 58208942,
          "cdd": 6737.14606481481,
          "scripthash_type": null
        },
        {
          "block_id": 170,
          "transaction_id": 171,
          "index": 1,
          "transaction_hash": "f4184fc596403b9d638783cf57adfe4c75c605f6356fbc91338530e9831e9e16",
          "date": "2009-01-12",
          "time": "2009-01-12 03:30:25",
          "value": 4000000000,
          "value_usd": 0.4,
          "recipient": "12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S",
          "type": "pubkey",
          "script_hex": "410411db93e1dcdb8a016b49840f8c53bc1eb68a382e97b1482ecad7b148a6909a5cb2e0eaddfb84ccf9744464f82e160bfa9b8b64f9d4c03f999b8643f656b412a3ac",
          "is_from_coinbase": false,
          "is_spendable": true,
          "is_spent": true,
          "spending_block_id": 181,
          "spending_transaction_id": 183,
          "spending_index": 0,
          "spending_transaction_hash": "a16f3ce4dd5deb92d98ef5cf8afeaf0775ebca408f708b2146c4fb42b41e14be",
          "spending_date": "2009-01-12",
          "spending_time": "2009-01-12 06:02:13",
          "spending_value_usd": 0.4,
          "spending_sequence": 4294967295,
          "spending_signature_hex": "473044022027542a94d6646c51240f23a76d33088d3dd8815b25e9ea18cac67d1171a3212e02203baf203c6e7b80ebd3e588628466ea28be572fe1aaa3f30947da4763dd3b3d2b01",
          "spending_witness": "",
          "lifespan": 9108,
          "cdd": 4.21666666666667,
          "scripthash_type": null
        }
      ]
    }
  },
  "context": {
    "code": 200,
    "results": 1,
    "state": 555555,
    ...
  }
}
Bonus endpoint:

https://api.blockchair.com/{:btc_chain}/dashboards/transaction/{:hash}₀/priority
For mempool transactions shows priority (position) — for chains supporting SegWit by fee_per_kwu, for others by fee_per_kb— over other transactions (out_of mempool transactions). position is null if the transaction is neither in the mempool nor in the blockchain, confirmed if it's in the blockchain. eta_seconds returns an approximate time for the transaction to confirm (in seconds, exprimental). Cost: 1.

Request cost formula:

1 for https://api.blockchair.com/{:btc_chain}/dashboards/transaction/{:hash}₀ endpoint
1 + (0.1 * (entity count - 1)) for https://api.blockchair.com/{:btc_chain}/dashboards/transactions/{:hash}₀,...,{:hash}ᵩ endpoint (e.g. it's 1 + (0.1 * (10 - 1)) = 1.9 for requesting 10 transactions)
Using ?omni=true adds 1 for each requested transaction
Explore visualization on our front-end:

https://blockchair.com/bitcoin/transaction/4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b
Address and extended public key (xpub) info
Endpoints:

https://api.blockchair.com/{:btc_chain}/dashboards/address/{:address}₀ (for a single address; further referred to as the address dashboard)
https://api.blockchair.com/{:btc_chain}/dashboards/addresses/{:address}₀,...,{:address}ᵩ (for a set of up to 100 addresses, comma-separated, further referred to as the addresses dashboard)
https://api.blockchair.com/{:btc_chain}/dashboards/xpub/{:extended_key} (info on xpub, ypub, or zpub extended key; further referred to as the xpub dashboard)
Where:

{:btc_chain} can be one of these: bitcoin, bitcoin-cash, litecoin, bitcoin-sv, dogecoin, dash, groestlcoin, zcash, ecash, bitcoin/testnet
{:address}ᵢ is the address, possible formats are:

p2pk/p2pkh format (supported for all blockchains, example for Bitcoin: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa)
p2sh format (supported for all blockchains, example for Bitcoin: 342ftSRCvFHfCeFFBuz4xwbeqnDw6BGUey)
Only for the dashboards/address endpoint Bitcoin Cash also supports Legacy address variant, and Bitcoin SV supports CashAddr variant for p2pkh and p2sh formats. It's also possible to use bitcoincash: prefix (examples: qzyl04w3m99ddpqahzwghn3erallm3e7z5le4aqqmh or bitcoincash:qzyl04w3m99ddpqahzwghn3erallm3e7z5le4aqqmh for both Bitcoin Cash and Bitcoin SV.
bech32 format (witness_v0_keyhash, witness_v0_scripthash, or witness_unknown — supported for Bitcoin, Litecoin, Groestlcoin, and Bitcoin Testnet only; example for Bitcoin: bc1q34aq5drpuwy3wgl9lhup9892qp6svr8ldzyy7c)
Internal Blockchair format (for multisig. nulldata, and nonstandard output types)
For eCash the ecash: prefix and format are used
{:extended_key} is the extended public key, possible formats are:

xpub (supported for all blockchains, example for Bitcoin: xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz, yields p2pkh addresses)
ypub (supported for Bitcoin, Litecoin, Groestlcoin, and Bitcoin Testnet only, example for Bitcoin: ypub6XiW9nhToS1gjVsFKzgmtWZuqo6V1YY7xaCns37aR3oYhFyAsTehAqV1iW2UCNtgWFQFkz3aNSZZbkfe5d1tD8MzjZuFJQn2XnczsxtjoXr, yields p2sh addresses)
zpub (supported for Bitcoin, Litecoin, Groestlcoin, and Bitcoin Testnet only, example for Bitcoin: ypub6XiW9nhToS1gjVsFKzgmtWZuqo6V1YY7xaCns37aR3oYhFyAsTehAqV1iW2UCNtgWFQFkz3aNSZZbkfe5d1tD8MzjZuFJQn2XnczsxtjoXr, yields witness_v0_keyhash addresses)
Note that custom xpub formats (e.g. ltub for Litecoin) are not supported.

Possible options:

?limit={:transaction_limit},{:utxo_limit} or a shorthand ?limit={:limit}. {:transaction_limit} limits the number of returned latest transaction hashes (in the transactions array) for an address or an address set. Default is 100. Maximum is 10000. In case of 0 returns an empty transaction hashes array. {:utxo_limit} limits the number of returned latest UTXOs (in the utxo array) for an address or an address set. Default is 100. Maximum is 10000. In case of 0 returns an empty UTXO array. If only one limit is set, it applies to both {:transaction_limit} and {:utxo_limit} (e.g. ?limit=100 is an equivalent of ?limit=100,100).
?offset={:transaction_offset},{:utxo_offest} or a shorthand ?offset={:offset} allows to paginate transaction hashes and the UTXO array. The behaviour is similar to the ?limit= section. Default for both offset is 0, and the maximum is 1000000.
?transaction_details=true — returns detailed info on transactions instead of just hashes in the transactions array. Each element contains block_id, transaction_hash, time, and balance_change (shows how the transactions affected the balance of {:address}, i.e. it can be a negative value). This option is available for all three endpoints: dashboards/address, dashboards/addresses, and dashboards/xpub.
?omni=true (for bitcoin only; in alpha test mode) — shows information about Omni Layer tokens belonging to the address. At the moment, this option is available for the address endpoint only. The data is returned in the layer_2.omni array.
?state=latest — discards unconfirmed transactions from the output — balance will show only confirmed balance, and transactions and utxo arrays won't include unconfirmed data.
Output:

Please note that while the only difference between for example transaction and transactions dashboards is the number of elements in the data array, address and addresses differ semantically. address returns info on a single address with its recent transaction hashes and its UTXO set, while addresses and xpub return info on an address set (as well as some stats on separate addresses) where transaction hashes and the UTXO set are returned for the entire set (that's more useful for wallets as in most cases the task is, for example, to retrieve latest 10 transaction hashes for a set of addresses sorted by time descending, but not 10 transactions for each address as it's not clear how to sort them).

Here's how these three dashboard calls structured (see more detailed examples below):

address endpoint (single address):

data
{:address}₀
address — an associative array with address info (balance, script_hex, transaction_count, etc.)
transactions — an array of latest transaction hashes where the address is a participant (either sender or recipient)
utxo — the UTXO set for the address
context — some context info
addresses endpoint (2 addresses for example):

data
set — an associative array with info on the address set (balance yields the total balance of 2 addresses, transaction_count is for both, etc.)
addresses
{:address}₀ — an associative array with the first address info (balance, script_hex, output_count, etc.)
{:address}₁ — an associative array with the second address info (balance, script_hex, output_count, etc.)
transactions — an array of latest transaction hashes for the entire set
utxo — the UTXO set for the address set
context — some context info
xpub endpoint:

data
{:extended_key}
xpub — an associative array with xpub info (balance yields the total balance of all addresses derived from the xpub, transaction_count, etc.)
addresses
{:address}₀ — an associative array with the first address info (balance, script_hex, output_count, etc.)
{:address}₁ — an associative array with the second address info (balance, script_hex, output_count, etc.)
transactions — an array of latest transaction hashes for the entire set
utxo — the UTXO set for the address set
context — some context info
Note that currently the maximum depth for xpub address discovery is 250 main addresses and 250 change addresses (larger limits up to 10.000 main / 10.000 change are available on Premium plans). According to BIP 32, our engine looks for 20 addresses at once, and if there's no transactions associated with this set, it stops looking.

data.addresses for both the addresses and the xpub endpoints don't include addresses which don't participate in transactions.

Address object specification:

type — address type (the same as type here, can be one of these: pubkey (P2PK), pubkeyhash (P2PKH), scripthash (P2SH), multisig, nulldata (OP_RETURN), nonstandard, witness_v0_keyhash (P2WPKH), witness_v0_scripthash (P2WSH), witness_unknown)
script_hex — output script (in hex) corresponding to the address
balance — address balance in satoshi (hereinafter — including unconfirmed outputs unless ?state=latest option is used)
balance_usd — address balance in USD
received — total received in satoshi
received_usd — total received in USD
spent — total spent in satoshi
spent_usd — total spent in USD
output_count — the number of outputs this address received
unspent_output_count — number of unspent outputs for this address (i.e. the number of inputs for an address can be calculated as output_count-unspent_output_count)
first_seen_receiving — timestamp (UTC) when the first time this address received coins
last_seen_receiving — timestamp (UTC) when the last time this address received coins
first_seen_spending — timestamp (UTC) when the first time this address sent coins
last_seen_spending — timestamp (UTC) when the last time this address sent coins
transaction_count — number of unique transactions this address participating in (available only in the address endpoint)
path — derived address path (available only in the xpub endpoint)
scripthash_type — in case the type is either scripthash (P2SH) or witness_v0_scripthash (P2WSH) — yields multisig type in the following format: multisig_{:m}_of_{:n}. If it's not multisig, or it's not possible to derive the type because there has been no spendings from this address — yields null. Available only in the address endpoint.
Context keys:

context.results — number of found addresses
context.limit — applied limit
context.offset — applied offset
context.state — best block height on the {:btc_chain} chain (tip: it's possible to calculate the number of confirmation block received using this formula: confirmations = context.state - data.{:id}ᵢ.block.id + 1)
context.checked (for the xpub endpoint only) — lists the addresses checked by our engine with their paths
Example requests:

https://api.blockchair.com/bitcoin/dashboards/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
https://api.blockchair.com/bitcoin/dashboards/addresses/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa,12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX
https://api.blockchair.com/bitcoin/dashboards/xpub/xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz
https://api.blockchair.com/bitcoin/dashboards/xpub/xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz?transaction_details=true&limit=10,0
https://api.blockchair.com/bitcoin/dashboards/address/12cbQLTFMXRnSzktFkuoG3eHoMeFtpTu3S?transaction_details=true
https://api.blockchair.com/bitcoin/dashboards/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa?limit=1&offset=1&transaction_details=true
Example outputs:

https://api.blockchair.com/bitcoin/dashboards/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa?limit=1&offset=1&transaction_details=true:

{
  "data": {
    "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa": {
      "address": {
        "type": "pubkey",
        "script_hex": "4104678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5fac",
        "balance": 6812392291,
        "balance_usd": 508913.63494609314,
        "received": 6812392291,
        "received_usd": 15293.3019,
        "spent": 0,
        "spent_usd": 0,
        "output_count": 1820,
        "unspent_output_count": 1820,
        "first_seen_receiving": "2009-01-03 18:15:05",
        "last_seen_receiving": "2019-10-24 18:47:23",
        "first_seen_spending": null,
        "last_seen_spending": null,
        "transaction_count": 1820,
        "scripthash_type": null
,      },
      "transactions": [
        {
          "block_id": 600890,
          "hash": "4db4d68b13bf667ad9a44f4222bad2239de318fa75555ef966e84315056374b5",
          "time": "2019-10-24 18:47:23",
          "balance_change": 267582
        }
      ],
      "utxo": [
        {
          "block_id": 600890,
          "transaction_hash": "4db4d68b13bf667ad9a44f4222bad2239de318fa75555ef966e84315056374b5",
          "index": 1,
          "value": 267582
        }
      ]
    }
  },
  "context": {
    "code": 200,
    "limit": "1,1",
    "offset": "1,1",
    "results": 1,
    "state": 600897,
    ...
  }
}
https://api.blockchair.com/bitcoin/dashboards/addresses/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa,12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX?limit=1:

{
  "data": {
    "set": {
      "address_count": 2,
      "balance": 11846862777,
      "balance_usd": 885009.2215792858,
      "received": 11846862777,
      "spent": 0,
      "output_count": 1915,
      "unspent_output_count": 1915,
      "first_seen_receiving": "2009-01-03 18:15:05",
      "last_seen_receiving": "2019-10-24 18:47:23",
      "first_seen_spending": null,
      "last_seen_spending": null,
      "transaction_count": 1912
    },
    "addresses": {
      "12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX": {
        "type": "pubkeyhash",
        "script_hex": "76a914119b098e2e980a229e139a9ed01a469e518e6f2688ac",
        "balance": 5034470486,
        "balance_usd": 376095.5866331926,
        "received": 5034470486,
        "received_usd": 1216.4402,
        "spent": 0,
        "spent_usd": 0,
        "output_count": 95,
        "unspent_output_count": 95,
        "first_seen_receiving": "2009-01-09 02:54:25",
        "last_seen_receiving": "2019-09-18 18:29:01",
        "first_seen_spending": null,
        "last_seen_spending": null
      },
      "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa": {
        "type": "pubkeyhash",
        "script_hex": "76a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1888ac",
        "balance": 6812392291,
        "balance_usd": 508913.63494609314,
        "received": 6812392291,
        "received_usd": 15293.3019,
        "spent": 0,
        "spent_usd": 0,
        "output_count": 1820,
        "unspent_output_count": 1820,
        "first_seen_receiving": "2009-01-03 18:15:05",
        "last_seen_receiving": "2019-10-24 18:47:23",
        "first_seen_spending": null,
        "last_seen_spending": null
      }
    },
    "transactions": [
      "f16bcc481a8939bc1c2f1b7df061f89958e265894dc71df248dabaad8e0815ed"
    ],
    "utxo": [
      {
        "block_id": -1,
        "transaction_hash": "f16bcc481a8939bc1c2f1b7df061f89958e265894dc71df248dabaad8e0815ed",
        "index": 0,
        "value": 558,
        "address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa"
      }
    ]
  },
  "context": {
    "code": 200,
    "limit": "1,1",
    "offset": "0,0",
    "results": 2,
    "state": 600898,
    ...
  }
}
https://api.blockchair.com/bitcoin/dashboards/xpub/xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz?limit=1,2:

{
  "data": {
    "xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz": {
      "xpub": {
        "address_count": 11,
        "balance": 491868,
        "balance_usd": 36.744556258799996,
        "received": 711868,
        "spent": 220000,
        "output_count": 11,
        "unspent_output_count": 9,
        "first_seen_receiving": "2014-12-22 17:42:10",
        "last_seen_receiving": "2019-09-25 16:12:10",
        "first_seen_spending": "2014-12-22 21:32:22",
        "last_seen_spending": "2014-12-23 17:26:21",
        "transaction_count": 13
      },
      "addresses": {
        "1EfgV2Hr5CDjXPavHDpDMjmU33BA2veHy6": {
          "path": "0/0",
          "type": "pubkeyhash",
          "script_hex": "76a91495ea668e0322bd99dac54ffdc9089d68e56c3aa188ac",
          "balance": 0,
          "balance_usd": 0,
          "received": 100000,
          "received_usd": 0.3255,
          "spent": 100000,
          "spent_usd": 0.3292,
          "output_count": 1,
          "unspent_output_count": 0,
          "first_seen_receiving": "2014-12-22 17:42:10",
          "last_seen_receiving": "2014-12-22 17:42:10",
          "first_seen_spending": "2014-12-23 17:26:21",
          "last_seen_spending": "2014-12-23 17:26:21"
        },
        "12iNxzdF6KFZ14UyRTYCRuptxkKSSVHzqF": {
          "path": "0/1",
          "type": "pubkeyhash",
          "script_hex": "76a91412cb841986033f5ec9a4a1babe3a47339beac81c88ac",
          "balance": 0,
          "balance_usd": 0,
          "received": 120000,
          "received_usd": 0.3906,
          "spent": 120000,
          "spent_usd": 0.3906,
          "output_count": 1,
          "unspent_output_count": 0,
          "first_seen_receiving": "2014-12-22 17:42:10",
          "last_seen_receiving": "2014-12-22 17:42:10",
          "first_seen_spending": "2014-12-22 21:32:22",
          "last_seen_spending": "2014-12-22 21:32:22"
        },
        "1CcEugXu9Yf9Qw5cpB8gHUK4X9683WyghM": {
          "path": "0/2",
          "type": "pubkeyhash",
          "script_hex": "76a9147f538d66e3745866949f1b98c72c00638f16c7a088ac",
          "balance": 8747,
          "balance_usd": 0.6534367627,
          "received": 8747,
          "received_usd": 0.0506,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2016-08-18 04:07:11",
          "last_seen_receiving": "2016-08-18 04:07:11",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "15xANZb5vJv5RGL263NFuh8UGgHT7noXeZ": {
          "path": "0/3",
          "type": "pubkeyhash",
          "script_hex": "76a914364f34453e722af26f5f861aafbb7105176edcee88ac",
          "balance": 100000,
          "balance_usd": 7.47041,
          "received": 100000,
          "received_usd": 2.6486,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2017-06-21 03:01:22",
          "last_seen_receiving": "2017-06-21 03:01:22",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1PJMBXKBYEBMRDmpAoBRbDff26gHJrawSp": {
          "path": "0/4",
          "type": "pubkeyhash",
          "script_hex": "76a914f49aaf692e1aca7d9de273d5b5538ad69677c74d88ac",
          "balance": 100000,
          "balance_usd": 7.47041,
          "received": 100000,
          "received_usd": 2.4581,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2017-07-02 17:12:03",
          "last_seen_receiving": "2017-07-02 17:12:03",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "16ZBYSHkLkRFHAuZvyzosXYgU1UDJxRV1R": {
          "path": "0/5",
          "type": "pubkeyhash",
          "script_hex": "76a9143ceebd5df25f739b5025d61fa4be2346fada97fd88ac",
          "balance": 100000,
          "balance_usd": 7.47041,
          "received": 100000,
          "received_usd": 2.4581,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2017-07-02 17:26:49",
          "last_seen_receiving": "2017-07-02 17:26:49",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1EHeVKfjjq6FJpix86G2yzFeRbZ6RNg2Zm": {
          "path": "0/6",
          "type": "pubkeyhash",
          "script_hex": "76a91491bf9590d5cf0412d5b3fec1284d7164b161c65088ac",
          "balance": 100000,
          "balance_usd": 7.47041,
          "received": 100000,
          "received_usd": 2.4581,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2017-07-02 18:11:17",
          "last_seen_receiving": "2017-07-02 18:11:17",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1HqsYkwczwvkMXCobk5WPZmhj2S2TK613Z": {
          "path": "0/8",
          "type": "pubkeyhash",
          "script_hex": "76a914b8c02c75c59f6320b729af2b0a5e0bff7efab95388ac",
          "balance": 40161,
          "balance_usd": 3.0001913601,
          "received": 40161,
          "received_usd": 2.6369,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2018-10-08 00:43:16",
          "last_seen_receiving": "2018-10-08 00:43:16",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1687EJf5YEmeEtcscnuJPiV5b8HkM1o98q": {
          "path": "0/9",
          "type": "pubkeyhash",
          "script_hex": "76a9143830bd9d4d16ecbfc7456c2668a5dfa2954ab64088ac",
          "balance": 40160,
          "balance_usd": 3.000116656,
          "received": 40160,
          "received_usd": 2.6369,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2018-10-08 00:43:16",
          "last_seen_receiving": "2018-10-08 00:43:16",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1MS6eGqD4iUGyJPbEsjqmoNaRhApgtmF8J": {
          "path": "0/10",
          "type": "pubkeyhash",
          "script_hex": "76a914e0219ffd268cf0a459d69c85557c68261b21026488ac",
          "balance": 1800,
          "balance_usd": 0.13446738,
          "received": 1800,
          "received_usd": 0.1157,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2018-11-07 17:26:45",
          "last_seen_receiving": "2018-11-07 17:26:45",
          "first_seen_spending": null,
          "last_seen_spending": null
        },
        "1LDPJCMZhYZjTvTGYahdhMXLuMfjfi6Kua": {
          "path": "0/29",
          "type": "pubkeyhash",
          "script_hex": "76a914d2c1fe5c55a1e9d818149750f2662ba57748247088ac",
          "balance": 1000,
          "balance_usd": 0.07470410000000001,
          "received": 1000,
          "received_usd": 0.0868,
          "spent": 0,
          "spent_usd": 0,
          "output_count": 1,
          "unspent_output_count": 1,
          "first_seen_receiving": "2019-09-25 16:12:10",
          "last_seen_receiving": "2019-09-25 16:12:10",
          "first_seen_spending": null,
          "last_seen_spending": null
        }
      },
      "transactions": [
        "a24445474a9a7c0698e8db221ad2cae06792a899e9bc7f5a590687c3c810c480"
      ],
      "utxo": [
        {
          "block_id": 596536,
          "transaction_hash": "a24445474a9a7c0698e8db221ad2cae06792a899e9bc7f5a590687c3c810c480",
          "index": 0,
          "value": 1000,
          "address": "1LDPJCMZhYZjTvTGYahdhMXLuMfjfi6Kua"
        },
        {
          "block_id": 549163,
          "transaction_hash": "0c9a0219a8f3ef4a7d00483a755a9a18a674340c547bdf573481c1c613898746",
          "index": 0,
          "value": 1800,
          "address": "1MS6eGqD4iUGyJPbEsjqmoNaRhApgtmF8J"
        }
      ]
    }
  },
  "context": {
    "code": 200,
    "limit": "1,2",
    "offset": "0,0",
    "results": 1,
    "checked": [
      "0/0: 1EfgV2Hr5CDjXPavHDpDMjmU33BA2veHy6",
      "0/1: 12iNxzdF6KFZ14UyRTYCRuptxkKSSVHzqF",
      "0/2: 1CcEugXu9Yf9Qw5cpB8gHUK4X9683WyghM",
      "0/3: 15xANZb5vJv5RGL263NFuh8UGgHT7noXeZ",
      "0/4: 1PJMBXKBYEBMRDmpAoBRbDff26gHJrawSp",
      "0/5: 16ZBYSHkLkRFHAuZvyzosXYgU1UDJxRV1R",
      "0/6: 1EHeVKfjjq6FJpix86G2yzFeRbZ6RNg2Zm",
      "0/7: 17BvBPGypT4nt1xc5QpdSDkQb54xoUuQkD",
      "0/8: 1HqsYkwczwvkMXCobk5WPZmhj2S2TK613Z",
      "0/9: 1687EJf5YEmeEtcscnuJPiV5b8HkM1o98q",
      "0/10: 1MS6eGqD4iUGyJPbEsjqmoNaRhApgtmF8J",
      "0/11: 1JSAD9Z8cpcMkwv98eFNWRciAMDqrPYJTE",
      "0/12: 18zBZa3GWoqxuJK9qgJnoVoYEJSpFGDn6x",
      "0/13: 17DcBkPv4VwdzC4837535XyyoUPZDkKArf",
      "0/14: 1DMZDJV5XgnTswpuP85Gnfk7p1473QmxuF",
      "0/15: 1AWhq6hMWzwxEG1wGeR7Y9aTyoxEjw7Rjj",
      "0/16: 1HxhnLyFE3b7CWxtcxRKjKQ9fcjHeweq8R",
      "0/17: 1H4J9nwbyUTvZ527K9fqaTeT3vd7Q4fVNC",
      "0/18: 1KWLBZNwdGVxWyVhSSYjScLNevvxrSm1ww",
      "0/19: 1J3BmEZTgHSgPcZptEP9grBVg8crvYYPSk",
      "0/20: 1deZJSgLcwqUm9gBoo7TMzC6CEBpeweJS",
      "0/21: 14hLE4kcxsL2E9VHwiztVokubR2rFkDnVr",
      "0/22: 17THvVGQF1kFyjQHWcW5AiwBxDvx7GRcLm",
      "0/23: 15RE6yBUX351VyAAht4SESXdgqEFAgwLdS",
      "0/24: 1DzbL4hx1BTKpuDKjeA2JxD598kDe1BVGz",
      "0/25: 1JwMtErm8siMrGM2LXBUrWTy1aBRkku79t",
      "0/26: 189tJnNzz9RP8ZRdrB8UTAoVkeNt7yJrGb",
      "0/27: 14S1fPp686HvwcuG4oBPHvn1HXeDZSAwjD",
      "0/28: 17JspALUGU9Kw5Ui3xX8VFnCx8JVjUj4zr",
      "0/29: 1LDPJCMZhYZjTvTGYahdhMXLuMfjfi6Kua",
      "0/30: 1AKP5BtANmebif9vNwYGNx5qcSxASJWSP9",
      "0/31: 1PqivQQbGwMmmDypaqoNLbE8vpKppihavk",
      "0/32: 1M1mGGEgtFZtcEjnmWzkWEJmTpr8dCLpaX",
      "0/33: 13srT2gVpj4G8kDNJJicsw28Ecxt3gvz6E",
      "0/34: 1NyEZ7zU8C2nEysVgHTYBjBgeCdmz4XSMX",
      "0/35: 1PtAfTFFtJUvQJRsY6v8gyjNyH3cu4ueyJ",
      "0/36: 1PLYcCvCkZCwgK9kq5T53fG5SRGkjieZve",
      "0/37: 1DFaATuBZXs9nYwEsihBpadnN1oYXPCwsn",
      "0/38: 1FnHfiGBb2ND6q8Q1Be5Sc9jwwFGsZzYcE",
      "0/39: 1GFjXEtmkV9XpC2D4Lbjvrk2NYFjHQRfnr",
      "0/40: 1MGAnDNvkDQvTGdJ9oZdSBtiTc9vuwRN2A",
      "0/41: 1Hrf1TUUSNnhgCFsywvA9BX9YaTABo4zsP",
      "0/42: 1CK4cQ85AAyB8s7FtENx3q7cCKTHqsCpD8",
      "0/43: 1Md5gRHwHUkUUbaeGB2EoWgfPBg1ERUc9C",
      "0/44: 16ubuUFzMQWzRpDFU39p9jBnJUqQBmq9hC",
      "0/45: 1CrBcrqv4p9mC6Am9Zc5WmzDW9h4B7yifL",
      "0/46: 14C3hQ3pHbg3mZw9cUsKVfVXkS5tYbx82i",
      "0/47: 1EM5gi9sURngbxXszMhXweqDm7vW8fFHvY",
      "0/48: 15NvG6YpVh2aUc3DroVttEcWa1Z99qhACP",
      "0/49: 18UXoW2caqHyTpDueSDtFrJyekg7VBzRzt",
      "0/50: 1P5chLKDSFVUJaf4ahwpZ1sJxUFoY2Ph1E",
      "0/51: 1CnsHtMDDPpwwjDX1idaVmXoAkn5w5DUFo",
      "0/52: 1DCP8fg3pCcTY3Voi5zf1em9ZFpjC8TZdE",
      "0/53: 1CiDp9n9G5Jw4mrqEYeZf2hGou3Qxbubfd",
      "0/54: 1DYMSL8EusREgBaSjuZ5BXyLgwsGFjQK4z",
      "0/55: 18Zwy9C8qwzr1WNqETs7ghQbbP1GaY2o4F",
      "0/56: 1GVFgnLwgEbxLi2gZXoScnGvnzefZNtvHw",
      "0/57: 1JeTm8ps2mnZMnzhrxMz3N26jk9pnxWjWk",
      "0/58: 14VecjHW9Mz7dwofxox1hRhBgitoXGvdtb",
      "0/59: 13n3no297bTMqnYPmtHgMaE7dtmsEXDPAT",
      "1/0: 1muF2Eq9iR4ttJKpc4zZkoTmu3E41Ab9v",
      "1/1: 18RtYUqcNDRjvbB8gg2hwxCYkWwuFcURJp",
      "1/2: 15LE2wxPfw54p3RYWtd7TiduPVqNWiRdFv",
      "1/3: 1CjYeTqk2M4qfnJWyYmLiGmm9BrX9Vdn7f",
      "1/4: 1NWaSHQZsedx3X5ySwkesL7SfDrfQ38TwZ",
      "1/5: 1HwVbcCNyoej8oyRn5ayTaMJbUbh1XH17D",
      "1/6: 1M2R4jSZHiJebjMZ6FEkE9kAFAF55SsNuf",
      "1/7: 1N2PNkgCAfkshYL1R533Q7nsEdUBiu69ou",
      "1/8: 1KaYtjPYwUaXKswMT6dVkjU1i3AaGRbwgc",
      "1/9: 16C6Dns9gfUAJ9PXPQj9hxcLmJaUgvCztg",
      "1/10: 14fXx1jkGk85izCGnhFUL1PfwNSEP5hrLj",
      "1/11: 1LGf9DzHTQd1BwakvcrQnQbKom7mZRmTnX",
      "1/12: 1Npzk7S3FdBqZUmCUFnpVAkbPZKcHEakd9",
      "1/13: 154Xhii1fs4qqPJWFSgV7NoQqheKj24zB6",
      "1/14: 16K7tqjnVEKqn9bS4mqmAv2ra4JnwoWFU3",
      "1/15: 1CN1oU8YF9udAKratV33EHGxmgR54d4CwY",
      "1/16: 1Ry5PG7hKm7H1Kvf7FTfoRt8n4kPtY6hL",
      "1/17: 1PNKjpz35PaWyeJrinQab2E1a1vtWcfRdy",
      "1/18: 16VwyBxQyJT5DUswUoyq7Ga6t6sY7Ua8aA",
      "1/19: 1GMdnCiw1dgGjaMAWyWssToYvtcGA5ERaH"
    ],
    "state": 600898,
    ...
  }
}
Request cost formula:

1 for the address endpoint (add 1 if ?omni=true is used)
1 + (0.1 * (entity count - 1)) for the addresses endpoint (e.g. it's 1 + (0.1 * (100 - 1)) = 10.9 for requesting 100 addresses)
1 + 2 * depth - 0.1 for the xpub endpoint, where depth is the number of 20-addresses iterations (BIP 32 standard). The minimum number of iterations is 1 (the cost would be 2.9 in that case), if there are 5 iterations required, 100 addresses will be checked in total (the cost would be 10.9)
Additional 1 point if ?transaction_details=true is used
Explore visualizations on our front-end:

https://blockchair.com/bitcoin/address/1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa
https://blockchair.com/bitcoin/xpub/xpub6CUGRUonZSQ4TWtTMmzXdrXDtypWKiKrhko4egpiMZbpiaQL2jkwSB1icqYh2cfDfVxdx4df189oLKnC5fSwqPfgyP3hooxujYzAu3fDVmz
Address balance mass check
This endpoint returns confirmed balances only. If address hasn't been seen on the blockchain or has a zero balance, it's not shown among the results. It's extremely fast (under 1 second for 25.000 addresses) and cheap (it costs only 26 request points to fetch 25.000 addresses).

Endpoints:

https://api.blockchair.com/{:btc_chain}/addresses/balances (POST)
https://api.blockchair.com/{:btc_chain}/addresses/balances?addresses={:comma_separated_list} (GET)
Where:

{:btc_chain} can be one of these: bitcoin, bitcoin-cash, litecoin, bitcoin-sv, dogecoin, dash, groestlcoin, zcash, ecash, bitcoin/testnet
{:comma_separated_list} is the comma-separated list of addresses (up to 25.000)
Example output:

https://api.blockchair.com/bitcoin/addresses/balances?addresses=34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo,35hK24tcLEWcgNA4JxpvbkNkoAcDGqQPsP,1DoesntExist:

{
  "data": {
    "35hK24tcLEWcgNA4JxpvbkNkoAcDGqQPsP": 25550215769897,
    "34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo": 4053399981517
  },
  "context": {
    "code": 200,
    "results": 2,
    "state": 635329,
    "request_cost": 1.003,
    ...
  }
}
Example POST request:

> curl -v --data "addresses=34xp4vRoCGJym3xR7yCVPFHoCNxv4Twseo,35hK24tcLEWcgNA4JxpvbkNkoAcDGqQPsP,1DoesntExist" https://api.blockchair.com/bitcoin/addresses/balances
(it's better to use POST for long requests)

Request cost formula:

1 + 0.001 per each requested address (i.e. for 25.000 addresses it's just 25, so it's the best and the fastest way to fetch balances)

Dashboard endpoints for Ethereum
Block info
Endpoints:

https://api.blockchair.com/{:eth_chain}/dashboards/block/{:height}₀
https://api.blockchair.com/{:eth_chain}/dashboards/block/{:hash}₀
https://api.blockchair.com/{:eth_chain}/dashboards/blocks/{:height}₀,...,{:height}ᵩ (up to 10 blocks, comma-separated)
https://api.blockchair.com/{:eth_chain}/dashboards/blocks/{:hash}₀,...,{:hash}ᵩ (up to 10 blocks, comma-separated)
Where:

{:eth_chain} can only be: ethereum or ethereum/testnet
{:height}ᵢ is the block height (integer value), also known as block id
{:hash}ᵢ is the block hash (regex: /^0x[0-9a-f]{64}$/i)
Possible options:

?limit={:limit} limits the number of returned transaction hashes contained in the block. Default is 100. Maximum is 10000. In case of 0 returns an empty transaction hashes array
?offset={:offset} allows to paginate transaction hashes. Default is 0. Maximum is 1000000.
Output:

data contains an associative array where found block heights or block hashes used as keys:

data.{:id}ᵢ.block — information about the block (see Ethereum-like block object for the field descriptions)
data.{:id}ᵢ.transactions — the array of transaction hashes (sorted by position in the block ascending) included in the block (respecting the set limit and offset)
data.{:id}ᵢ.synthetic_transactions — array of internal Blockchair ids of synthetic transactions. By synthetic transactions we understand state changes in the blockchain which don't have parental transaction entities, i.e. transferring miner reward (for blocks and uncles), coin generation in the genesis block, etc. This array is not iterable, and always yields the entire result set.
data.{:id}ᵢ.uncles — the array of hashes of the block's uncles (in case there are no uncles — an empty array). This array is not iterable as well, and always yields the entire result set.
Where {:id}ᵢ is either {:height}ᵢ or {:hash}ᵢ from the query string.

If there's no {:id}ᵢ has been found in the database, there won't be such key.

Note that the total number of transactions in the block is contained in data.{:id}ᵢ.block.transaction_count, but that doesn't take synthetic transactions into account (use data.{:id}ᵢ.block.synthetic_transaction_count instead)

Context keys:

context.results — number of found blocks
context.limit — applied limit
context.offset — applied offset
context.state — best block height on the {:eth_chain} chain (tip: it's possible to calculate the number of confirmation block received using this formula: confirmations = context.state - data.{:id}ᵢ.block.id + 1)
Example requests:

https://api.blockchair.com/ethereum/dashboards/block/2345678
https://api.blockchair.com/ethereum/dashboards/block/0xda214d1b1d458e7ae0e626b69a52a59d19762c51a53ff64813c4d31256282fdf
context.state: best block height on the {:eth_chain} chain (tip: it's possible to calculate the number of confirmation transaction received using this formula: confirmations = data.{:id}ᵢ.transaction.block_id - context.state + 1, or if data.{:id}ᵢ.transaction.block_id is -1 it's an unconfirmed transaction)
https://api.blockchair.com/ethereum/dashboards/block/2345678?limit=2
https://api.blockchair.com/ethereum/dashboards/block/2345678?limit=2&offset=2
Example output:

https://api.blockchair.com/ethereum/dashboards/block/2345678:

{
  "data": {
    "2345678": {
      "block": {
        "id": 2345678,
        "hash": "0xda214d1b1d458e7ae0e626b69a52a59d19762c51a53ff64813c4d31256282fdf",
        "date": "2016-09-29",
        "time": "2016-09-29 01:39:41",
        "size": 1109,
        "miner": "0x4bb96091ee9d802ed039c4d1a5f6216f90f81b01",
        "extra_data_hex": "657468706f6f6c2e6f7267202845553129",
        "difficulty": 81923183857781,
        "gas_used": 105000,
        "gas_limit": 1500000,
        "logs_bloom": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "mix_hash": "f5b95f5b79cd8425db7f04d200d78d16c104c28d078d0b653ae1c24f31759662",
        "nonce": "681508643254209570",
        "receipts_root": "51a6952987f2c7ebf74fc1a4f644265aebb660b1d86a12c0f6e3001a2866331f",
        "sha3_uncles": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "state_root": "4f6b1af13d99c75e0d644b226d57767a0d2f22921c529dfe3455bc63154b01e5",
        "total_difficulty": "66939257372572274863",
        "transactions_root": "dde4d2ce7556effca10c868f500f0e47fb09b5cb4a003d781080f1a06e582352",
        "uncle_count": 0,
        "transaction_count": 5,
        "synthetic_transaction_count": 1,
        "call_count": 5,
        "synthetic_call_count": 1,
        "value_total": "17966223975031638280",
        "value_total_usd": 238.950782294711,
        "internal_value_total": "17963073975031638280",
        "internal_value_total_usd": 238.90888729411,
        "generation": "5000000000000000000",
        "generation_usd": 66.5000009536743,
        "uncle_generation": "0",
        "uncle_generation_usd": 0,
        "fee_total": "3150000000000000",
        "fee_total_usd": 0.0418950006008148,
        "reward": "5003150000000000000",
        "reward_usd": 66.5418959542751
      },
      "uncles": [],
      "transactions": [
        "0x4052841e7ff856e08e73245ed1fab5f41021d4bfe83202b6581870cb559b44c4",
        "0xa1ed63865958a1b3abc8e259dc980bd76dd3f989f14577cce18b7e265cf9528e",
        "0x1d6713c7e6be2a45e6b3d2a7dfc1af96443cfb65d4b51cd41ac21b7b840e77e0",
        "0xffbcdcbef6c5341dd60a9b7f182b61cf0c468d63defcc2fa8c56e292d4bfc8d6",
        "0x0c79e3ae36150eb36d6a631cc8d6250db4b9b832a82ac58ea356357f5987debe"
      ],
      "synthetic_transactions": [
        2345678000005
      ]
    }
  },
  "context": {
    "code": 200,
    "limit": 100,
    "offset": 0,
    "results": 1,
    "state": 8766187,
    "state_layer_2": 8766186,
    ...
  }
}
Request cost formula:

1 for https://api.blockchair.com/{:eth_chain}/dashboards/block/{:height}₀ and https://api.blockchair.com/{:eth_chain}/dashboards/block/{:hash}₀ endpoints
1 + (0.1 * (entity count - 1)) for https://api.blockchair.com/{:eth_chain}/dashboards/blocks/{:height}₀,...,{:height}ᵩ and https://api.blockchair.com/{:eth_chain}/dashboards/blocks/{:hash}₀,...,{:hash}ᵩ endpoints (e.g. it's 1 + (0.1 * (10 - 1)) = 1.9 for requesting 10 blocks)
Explore visualizations on our front-end:

https://blockchair.com/ethereum/block/2345678
Uncle info
Endpoints:

https://api.blockchair.com/{:eth_chain}/dashboards/uncle/{:hash}₀
https://api.blockchair.com/{:eth_chain}/dashboards/uncle/{:hash}₀,...,{:hash}ᵩ (up to 10 uncles, comma-separated)
Where:

{:eth_chain} can only be: ethereum or ethereum/testnet
{:hash}ᵢ is the uncle hash (regex: /^0x[0-9a-f]{64}$/i)
Output:

data contains an associative array where uncle hashes used as keys:

data.{:hash}ᵢ.uncle — information about the block (see Ethereum-like uncle object for the field descriptions)
If there's no {:hash}ᵢ has been found in the database, there won't be such key.

Context keys:

context.results: number of found uncles
context.limit: applied limit
context.offset: applied offset
context.state: best block height on the {:eth_chain} chain
Example requests:

https://api.blockchair.com/ethereum/dashboards/uncle/0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109
https://api.blockchair.com/ethereum/dashboards/uncles/0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109,0xedc7a92c2a8aa140b0afa26db4ce8e05994a67d6fc3d736ddd77210b0ba565bb
Example output:

https://api.blockchair.com/ethereum/dashboards/uncle/0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109:

{
  "data": {
    "0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109": {
      "uncle": {
        "parent_block_id": 3,
        "index": 0,
        "id": 1,
        "hash": "0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109",
        "date": "2015-07-30",
        "time": "2015-07-30 15:26:58",
        "size": 538,
        "miner": "0xc8ebccc5f5689fa8659d83713341e5ad19349448",
        "extra_data_hex": "59617465732052616e64616c6c202d2045746865724e696e6a61",
        "difficulty": 17171480576,
        "gas_used": 0,
        "gas_limit": 5000,
        "logs_bloom": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "mix_hash": "f8c94dfe61cf26dcdf8cffeda337cf6a903d65c449d7691a022837f6e2d99459",
        "nonce": "7545615996671392490",
        "receipts_root": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "sha3_uncles": "1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
        "state_root": "1e6e030581fd1873b4784280859cd3b3c04aa85520f08c304cf5ee63d3935add",
        "transactions_root": "56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
        "generation": "3750000000000000000",
        "generation_usd": 3.75
      }
    }
  },
  "context": {
    "code": 200,
    "results": 1,
    "state": 8792290,
    "state_layer_2": 8792279,
    ...
  }
}
Request cost formula:

1 for https://api.blockchair.com/{:eth_chain}/dashboards/uncle/{:hash}₀ endpoint
1 + (0.1 * (entity count - 1)) for https://api.blockchair.com/{:eth_chain}/dashboards/uncles/{:hash}₀,...,{:hash}ᵩ endpoint (e.g. it's 1 + (0.1 * (10 - 1)) = 1.9 for requesting 10 uncles)
Explore visualizations on our front-end:

https://blockchair.com/ethereum/uncle/0x5cd50096dbb856a6d1befa6de8f9c20decb299f375154427d90761dc0b101109
Transaction info
Endpoints:

https://api.blockchair.com/{:eth_chain}/dashboards/transaction/{:hash}₀
https://api.blockchair.com/{:eth_chain}/dashboards/transactions/{:hash}₀,...,{:hash}ᵩ (up to 10 transactions, comma-separated)
Where:

{:eth_chain} can only be: ethereum or ethereum/testnet
{:hashᵢ} is the transaction hash (regex: /^0x[0-9a-f]{64}$/i), also known as txid
Possible options:

?erc_20=true shows information about ERC-20 token transfers in this transaction
?effects=true shows state changes for the transaction
?trace_mempool=true — this option tries to retrieve a list of internall calls for mempool transactions. In conjunction with &erc_20=true it also shows the list of ERC-20 transfers. This is an experimental feature. Please note that internal transfers may get invalidated when transaction gets confirmed.
?assets_in_usd=true — adds value_usd_now to all layer_2.erc_20 items yielding the current (not at the moment of the transaction!) USD value of tokens (null if the price is unknown)
?events=true — this option costs 1 additional request point to use. When enabled, it adds an array of event logs to the output. Every log contains topics, data, contract, log_index, and decoded_event. Depending on how much our API knows about the event signature, there are 3 detalization levels for decoded_event (example transaction with all 3: https://api.blockchair.com/ethereum/dashboards/transaction/0x7d52cf58fe78403e8816dae6e900baff92b35760b4ed81cecd2590eafcde3dad?events=true):
Full data: decoded_event contains both the full event name with its argument names (name_full, example: Approval(address owner, address spender, uint256 value)), and the argument values in the arguments array;
Partial data: only name_with_types is known (example: Withdrawal(address, uint256)), arguments yields null;
No data: decoded_event yields null.
Output:

data contains an associative array where found transaction hashes are used as keys:

data.{:hash}ᵢ.transaction — information about the transaction (see Ethereum-like transaction object)
data.{:hash}ᵢ.calls — the array of all calls made during the execution of the transaction (always null for mempool transactions and the last 6 blocks)
Additional data:

data.{:hash}ᵢ.layer_2.erc_20 (only if ?erc_20=true is set) — an array of ERC-20 transfers (or an empty array if there are none), Each array element contains the following keys: token_address, token_name, token_symbol, token_decimals, sender, recipient, value — field descriptions are available here.
data.{:hash}ᵢ.effects (only if ?effects=true is set) — yields all ETH ad ERC-20 balance changes for the transaction in a neat format. Keys are 0x0000000000000000000000000000000000000000 for ETH or token address for ERC-20's. Each array element contains the following keys: asset_type, asset_name, asset_symbol, asset_decimals, changes. changes is an array containing all the changes for the asset (keys are Ethereum addresses, and values are balance changes). Please note this option is experimental. Example request: https://api.blockchair.com/ethereum/dashboards/transaction/0xd9a24f57c713207c39c58e8ef3cb44e115fcc8bd0f85eb4ea82c78bc065a723f?effects=true&erc_20=true. If ?erc_20=true option is not used, ?effects=true won't yield ERC-20 data.
In case transaction is confirmed on the blockchain, data.{:hash}ᵢ.transaction.block_id contains the block number it's included in. If the transaction is in the mempool, data.{:hash}ᵢ.transaction.block_id yields -1. If the transaction is neither present in the blockchain, nor in the mempool, there won't be data.{:hash}ᵢ key with data.

Context keys:

context.results — number of found transactions
context.state — best block height on the {:eth_chain} chain (tip: it's possible to calculate the number of confirmation transaction received using this formula: confirmations = data.{:id}ᵢ.transaction.block_id - context.state + 1, or if data.{:id}ᵢ.transaction.block_id is -1 it's an unconfirmed transaction)
context.state_layer_2 — the latest block number for which our engine has processed second layer (e.g. ERC-20) transactions. If it's less than the block id in your current environment (e.g. block id of a transaction you requested), it makes sense to repeat the request after some time to retrieve second layer data
Example requests:

https://api.blockchair.com/ethereum/dashboards/transaction/0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08
https://api.blockchair.com/ethereum/dashboards/transactions/0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08,0x502bc6fe1f39738f0fd3223a2f125433b8ec7e80acd11ef514f6909536cc9e66
https://api.blockchair.com/ethereum/dashboards/transaction/0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08?erc_20=true
https://api.blockchair.com/ethereum/dashboards/transaction/0x77025c5c7ff5eeb4bb164a4be84dd49192e12086cc321199f73888830c3ecd9e?erc_20=true&assets_in_usd=true
Example output:

https://api.blockchair.com/ethereum/dashboards/transaction/0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08?erc_20=true:

{
  "data": {
    "0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08": {
      "transaction": {
        "block_id": 5678901,
        "id": 5678901000028,
        "index": 28,
        "hash": "0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08",
        "date": "2018-05-26",
        "time": "2018-05-26 08:06:16",
        "failed": false,
        "type": "call_tree",
        "sender": "0xcd36cfb41b81cfbc97772e43fda1fab39e718869",
        "recipient": "0x0ebe7487f60d3a4eb084a23152890a1a65b2ad65",
        "call_count": 101,
        "value": "0",
        "value_usd": 0,
        "internal_value": "0",
        "internal_value_usd": 0,
        "fee": "16821205000000000",
        "fee_usd": 9.84774982859924,
        "gas_used": 3364241,
        "gas_limit": 4000000,
        "gas_price": 5000000000,
        "input_hex": "bb0a64b600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000d00000000000000000000000000a68920f6d3c996ac3c232e4e93914e9d7615073500000000000000000000000000000000000000000000000000000000000000640000000000000000000000004cb04ab4dfc1963814cb2b1da8475e5ada6065f3000000000000000000000000459ed852d2f296942d82e0b88f678c01d3dda946000000000000000000000000c00dbc71bce389816763773fc4e5b757fce9b184...",
        "nonce": "9092",
        "v": "1c",
        "r": "9b9a4da4aa5f0dfe141b6dad2ae6e41bcd63cab7f0ae9aef4f1752037b698526",
        "s": "20acc42c4941a1077fa4bb8ccd707e6865a61c60f4a77d1b19f86d2e0525fcde"
      },
      "calls": [
        {
          "block_id": 5678901,
          "transaction_id": 5678901000028,
          "transaction_hash": "0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08",
          "index": "0",
          "depth": 0,
          "date": "2018-05-26",
          "time": "2018-05-26 08:06:16",
          "failed": false,
          "fail_reason": null,
          "type": "call",
          "sender": "0xcd36cfb41b81cfbc97772e43fda1fab39e718869",
          "recipient": "0x0ebe7487f60d3a4eb084a23152890a1a65b2ad65",
          "child_call_count": 100,
          "value": "0",
          "value_usd": 0,
          "transferred": true,
          "input_hex": "bb0a64b600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000d00000000000000000000000000a68920f6d3c996ac3c232e4e93914e9d7615073500000000000000000000000000000000000000000000000000000000000000640000000000000000000000004cb04ab4dfc1963814cb2b1da8475e5ada6065f300...",
          "output_hex": "0000000000000000000000000000000000000000000000000000000000000001"
        },
        {
          "block_id": 5678901,
          "transaction_id": 5678901000028,
          "transaction_hash": "0xc132a422513e39038269e091847319a14029feb42c66bd1424c57dfc0e4f8d08",
          "index": "0.0",
          "depth": 1,
          "date": "2018-05-26",
          "time": "2018-05-26 08:06:16",
          "failed": false,
          "fail_reason": null,
          "type": "call",
          "sender": "0x0ebe7487f60d3a4eb084a23152890a1a65b2ad65",
          "recipient": "0xa68920f6d3c996ac3c232e4e93914e9d76150735",
          "child_call_count": 0,
          "value": "0",
          "value_usd": 0,
          "transferred": true,
          "input_hex": "a9059cbb0000000000000000000000004cb04ab4dfc1963814cb2b1da8475e5ada6065f30000000000000000000000000000000000000000000000056bc75e2d63100000",
          "output_hex": ""
        },
        ...
      ],
      "layer_2": {
        "erc_20": [
          {
            "token_address": "0xa68920f6d3c996ac3c232e4e93914e9d76150735",
            "token_name": "",
            "token_symbol": "MST",
            "token_decimals": 18,
            "sender": "0x0ebe7487f60d3a4eb084a23152890a1a65b2ad65",
            "recipient": "0xa488cf9adcac170f28a046ba34a9885eb9f67033",
            "value": "100000000000000000000",
        		"value_approximate": 100
          },
          {
            "token_address": "0xa68920f6d3c996ac3c232e4e93914e9d76150735",
            "token_name": "",
            "token_symbol": "MST",
            "token_decimals": 18,
            "sender": "0x0ebe7487f60d3a4eb084a23152890a1a65b2ad65",
            "recipient": "0x8cc1e8ffc3bf19c67c244e2bd8126fd29ec50e58",
            "value": "100000000000000000000",
    				"value_approximate": 100
          },
          ...
        ]
      }
    }
  },
  "context": {
    "code": 200
    "results": 1,
    "state": 8791761,
    "state_layer_2": 8791746,
    ...
  }
}
Bonus endpoint:

https://api.blockchair.com/{:eth_chain}/dashboards/transaction/{:hash}₀/priority
For mempool transactions shows priority (position) by gas_price over other transactions (out_of mempool transactions). position is null if the transaction is not in the mempool. eta_seconds returns an approximate time for the transaction to confirm (in seconds, exprimental). Cost: 1.

Request cost formula:

1 for https://api.blockchair.com/{:eth_chain}/dashboards/transaction/{:hash}₀ endpoint
1 + (0.1 * (entity count - 1)) for https://api.blockchair.com/{:eth_chain}/dashboards/transactions/{:hash}₀,...,{:hash}ᵩ endpoint (e.g. it's 1 + (0.1 * (10 - 1)) = 1.9 for requesting 10 transactions)
Using ?erc_20=true adds 1 for each requested transaction
Using ?effects=true adds 1 for each requested transaction
Using ?events=true adds 1 for each requested transaction
Using ?trace_mempool=true adds 1 for each requested transaction
Explore visualization on our front-end:

https://blockchair.com/ethereum/transaction/0xd628780ba231cefe6a4f6c3da3b683b16f6151dc9753afd8773d3c2d74ac10c8
Address info
Endpoint:

https://api.blockchair.com/{:eth_chain}/dashboards/address/{:address}₀
Where:

{:eth_chain} can only be: ethereum or ethereum/testnet
{:address}ᵢ is an Ethereum address (either an account or a contract, the address should start with 0x)
Possible options:

?limit={:call_limit} — limits the number of returned latest calls associated with the address. Default is 100. Maximum is 10000.
?offset={:call_offset} — allows to paginate calls. Default is 0, and the maximum is 1000000.
?erc_20={...} — returns information about ERC-20 token balances of the address (tokens are sorted by market capitalization descending):
?erc_20=approximate (or ?erc_20=true, default) — yields all token balances from our database. These values may miss some non-standard transfers in tokens that don't follow the ERC-20 standard in full. Please double-check if this option returns correct values for the tokens you'd want to get information about. Using this option costs 1.
?erc_20=precise — yields all token balances from our node. The process is the following: we gather information from our database about potential ERC-20 tokens the address may hold, and then for each token we call getBalance function using our node to get precise balances. Please note that if for some reason some contract doesn't follow the ERC-20 standard, our database may still miss records about the address holding this token, and there will be no request to the node about this token. So while balances yielded with this option are precise, some non-standard tokens may still be missed. Using this option costs 2.
?erc_20={:token_address}₀,...,{:token_address}ᵩ (recommended) — yields balances for the enlisted ERC-20 tokens from our node. That's the recommended way if you have an exact list of tokens you'd like to check. Even if some token doesn't follow the ERC-20 standard, but still has getBalance function implemented, the correct balance will be returned. Using this option costs 0.75 + 0.01 for each contract checked (the cheapest option!)
?nonce=true — returns current account nonce (mempool transactions are taken in account)
?output=type — this option scrubs all the output data except for the address type (account or contract). This may be a very fast handy way to retrieve address type instead of requesting full address data
?assets_in_usd=true — adds asset_balance_usd to the output yielding the total USD value of all (excluding ETH) account assets (currently it's most popular ERC-20 tokens only), as well as balance_usd to all layer_2.erc_20 items. If the exchange rate for a particular token is unknown, returns null for this token.
?state=latest — if this option is enabled, balance will yield the confirmed balance, and the calls array won't include unconfirmed data
?contract_details=true — if applied, it adds additional data on the address if it's a contract. At the moment, it works with ERC-20 contracts only yielding token_name, token_symbol, and token_decimals. It also yields some additional fields for all contracts: creating_transaction_hash, creating_address, and creating_transaction_time. The additional cost of using this option is 0.5
Output:

In case the address has been found, data.{:address}₀ returns an array consisting of the following elements:

address
address.type — address type (account — for a simple address, contract — for a contract)
address.contract_code_hex — hex code of the contract at the moment of creation (for a contract), or null for an address
address.contract_created — for contracts only — if the contact was indeed created then true, if not (i.e. with a failed create call) — false, for a simple address yields null
address.contract_destroyed — for contracts only — if the contact was successfully destroyed (SELFDESCTRUCT) then true, if not — false; for a simple address yields null
address.balance — exact address balance in wei (here and below values in wei returned as strings as they don't fit into integers)
address.balance_usd — address balance in USD (float)
address.received_approximate — total received in wei (approximately) †
address.received_usd — total received in USD (approximately) †
address.spent_approximate — total spent in wei (approximately) †
address.spent_usd — total spent in USD (approximately) †
address.fees_approximate — total spent in transaction fees in wei (approximately) †
address.fees_usd — total spent in transaction fees in USD (approximately) †
address.receiving_call_count — number of calls the address has received, where value transfer occured ‡
address.spending_call_count — number of calls that has been made by this address where value transfer occured ‡
address.call_count — total number of calls the address participated in (may be greater than receiving_call_count + spending_call_count, because it also takes failed calls into account)
address.transaction_count — number of transactions the address participated in
address.first_seen_receiving — timestamp (UTC) when the address received a successful incoming call for the first time
address.last_seen_receiving — timestamp (UTC) when the address received a successful incoming call for the last time
address.first_seen_spending — timestamp (UTC) when the address sent a successful call for the first time
address.last_seen_spending — timestamp (UTC) when the address sent a successful call for the last time
address.nonce — current account nonce (only if ?nonce=true is set, null otherwise)
calls — an array of the latest address call, each element of an array containing the following elements: block_id, transaction_hash, index, time, sender, recipient, value, value_usd, transferred (see the description here)
layer_2.erc_20 (only if ?erc_20=true is set) — the array of ERC-20 token balances of the address, each element contains the following fields: token_address, token_name, token_symbol, token_decimals, balance_approximate (number of tokens), balance (exact number of tokens in the smallest denomination). Note that balance ≈ balance_approximate * 10 ^ token_decimals.
Additional data:

data.{:hash}ᵢ.layer_2.erc_20 (or an empty array if there are none), Each array element contains the following keys: token_address, token_name, token_symbol, token_decimals, sender, recipient, value — field descriptions are available here.
context.results contains the number of found addresses (0 or 1).

Notes:

† — for these fields the wei value can be rounded. For a million of calls, the rounding error can be more than 1 ether.
‡ — only those calls are counted that fit the following condition: transferred = true, i.e. calls that do not change state (including staticcall, failed calls, etc.) are not taken into account
Context keys:

context.results — number of found addresses
context.limit — applied limit
context.offset — applied offset
context.state — best block height on the {:eth_chain} chain (tip: it's possible to calculate the number of confirmation block received using this formula: confirmations = block_id - context.state + 1)
context.state_layer_2 — the latest block number for which our engine has processed second layer (e.g. ERC-20) transactions. If it's less than the block id in your current environment (e.g. block id of a transaction you requested), it makes sense to repeat the request after some time to retrieve second layer data
Example requests:

https://api.blockchair.com/ethereum/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d
https://api.blockchair.com/ethereum/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d?limit=1&offset=0
https://api.blockchair.com/ethereum/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d?erc_20=true&nonce=true
Example output:

https://api.blockchair.com/ethereum/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d?erc_20=true:

{
  "data": {
    "0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d": {
      "address": {
        "type": "account",
        "contract_code_hex": null,
        "contract_created": null,
        "contract_destroyed": null,
        "balance": "1337000000000000001337",
        "balance_usd": 217088.92828369106,
        "received_approximate": "1337000000000000000000",
        "received_usd": 1337,
        "spent_approximate": "0",
        "spent_usd": 0,
        "fees_approximate": "0",
        "fees_usd": 0,
        "receiving_call_count": 2,
        "spending_call_count": 0,
        "call_count": 2,
        "transaction_count": 2,
        "first_seen_receiving": "2015-07-30 00:00:00",
        "last_seen_receiving": "2018-11-16 00:52:45",
        "first_seen_spending": null,
        "last_seen_spending": null
      },
      "calls": [
        {
          "block_id": 6712155,
          "transaction_hash": "0x0357352473d64df14fb987f33bbc9c3cd317fafe7c9498139c6a0529b551a017",
          "index": "0",
          "time": "2018-11-16 00:52:45",
          "sender": "0x0f4b92e13cc618bb9ff2120aec2ccd19f0d97b68",
          "recipient": "0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d",
          "value": 1337,
          "value_usd": 0,
          "transferred": true
        },
        {
          "block_id": 0,
          "transaction_hash": null,
          "index": "0",
          "time": "2015-07-30 00:00:00",
          "sender": null,
          "recipient": "0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d",
          "value": 1.337e+21,
          "value_usd": 1337,
          "transferred": true
        }
      ],
      "layer_2": {
        "erc_20": [
          {
            "token_address": "0x68e14bb5a45b9681327e16e528084b9d962c1a39",
            "token_name": "en",
            "token_symbol": "CAT",
            "token_decimals": 18,
            "balance_approximate": 5,
            "balance": "5000000000000000000"
          },
          {
            "token_address": "0xd49ff13661451313ca1553fd6954bd1d9b6e02b9",
            "token_name": "ElectrifyAsia",
            "token_symbol": "ELEC",
            "token_decimals": 18,
            "balance_approximate": 13.6553835383397,
            "balance": "13655383538340000000"
          },
          ...
        ]
      }
    }
  },
  "context": {
    "code": 200,
    "limit": 100,
    "offset": 0,
    "results": 1,
    "state": 8805160,
    "state_layer_2": 8805148,
    ...
  }
}
Request cost formula:

1 + 1 for each of the options used: ?erc_20=true, ?nonce=true + 0.5 if the ?contract_details=true option is used
Explore visualizations on our front-end:

https://blockchair.com/ethereum/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d
Dashboard endpoints for second layers
Omni Layer property info
Allows to retrieve the some basic information on an Omni Layer (Bitcoin) property (token).

Endpoints:

https://api.blockchair.com/bitcoin/omni/dashboards/property/{:prorerty_id}
Where:

{:prorerty_id} is the property identifier (integer)
Output:

data contains information about the property, fields accord with Omni Layer specification (https://github.com/OmniLayer/spec)

Example request:

https://api.blockchair.com/bitcoin/omni/dashboards/property/31
Example output:

https://api.blockchair.com/bitcoin/omni/dashboards/property/31:

{
  "data": {
    "id": 31,
    "name": "TetherUS",
    "category": "Financial and insurance activities",
    "subcategory": "Activities auxiliary to financial service and insurance activities",
    "description": "The next paradigm of money.",
    "url": "https://tether.to",
    "is_divisible": false,
    "issuer": "32TLn1WLcu8LtfvweLzYUYU6ubc2YV9eZs",
    "creation_transaction_hash": "5ed3694e8a4fa8d3ec5c75eb6789492c69e65511522b220e94ab51da2b6dd53f",
    "creation_time": "2014-10-06 16:39:15",
    "creation_block_id": 324140,
    "is_issuance_fixed": false,
    "is_issuance_managed": false,
    "circulation": 2145000000,
    "ecosystem": 1
  },
  "context": {
    "code": 200,
    "results": 1,
    "state": 599974,
    ...
  }
}
Request cost formula:

Always 1.

Explore visualization on our front-end:

https://blockchair.com/bitcoin/omni/property/31
ERC-20 token info
Allows to retrieve the some basic information on an ERC-20 token. Note that this endpoint is in the Beta stage.

Endpoints:

https://api.blockchair.com/ethereum/erc-20/{:token_address}/stats
https://api.blockchair.com/ethereum/testnet/erc-20/{:token_address}/stats (Goerli Testnet)
Where:

{:token_address} is the token contract address (starting with 0x)
Output:

data contains information about the token:

name — token name
symbol — token symbol (short name)
decimals — the number of decimal the token uses
time — timestamp (UTC) when the contract was created
creating_block_id — block id in which the token was created
creating_transaction_hash — transaction hash in which the token was created
transactions — total number of transfers associated with the token
transactions_24h — the same over the last 24 hours
volume_24h_approximate — transacted monetary volume in the number of tokens
volume_24h — the same in the token's smallest denomination (volume_24h ≈ volume_24h_approximate * (10 ^ decimals ))
circulation_approximate — circulating supply in the number of tokens
circulation — the same in the token's smallest denomination (circulation ≈ circulation_approximate * (10 ^ decimals ))
market_price_usd, market_price_btc, and market_cap_usd for market data. nulls are returned if there's no market data for the specified token
Example requests:

https://api.blockchair.com/ethereum/erc-20/0xdac17f958d2ee523a2206206994597c13d831ec7/stats
Example output:

https://api.blockchair.com/ethereum/erc-20/0xdac17f958d2ee523a2206206994597c13d831ec7/stats:

{
  "data": {
    "name": "Tether USD",
    "symbol": "USDT",
    "decimals": 6,
    "time": "2017-11-28 00:41:21",
    "creating_block_id": 4634748,
    "creating_transaction_hash": "0x2f1c5c2b44f771e942a8506148e256f94f1a464babc938ae0690c6e34cd79190",
    "transactions": 120789146,
    "transactions_24h": 153043,
    "volume_24h_approximate": 6941771405.5918045,
    "volume_24h": "6941771405591800",
    "circulation": "30910401959975130",
    "circulation_approximate": 30910401959.97513,
    "market_price_usd": 0.99923,
    "market_price_btc": 0.000029490600005902663,
    "market_cap_usd": 30886600950.465946
  },
  "context": {
    "code": 200,
    "results": 1,
    "state": 10163626,
    "state_layer_2": 10163616,
    ...
  }
}
Request cost formula:

Always 1.

Explore visualizations on our front-end:

https://blockchair.com/ethereum/erc-20/token/0xdac17f958d2ee523a2206206994597c13d831ec7
ERC-20 token holder info
Endpoints:

https://api.blockchair.com/ethereum/erc-20/{:token_address}/dashboards/address/{:address}
https://api.blockchair.com/ethereum/testnet/erc-20/{:token_address}/dashboards/address/{:address} (Goerli Testnet)
Where:

{:token_address} is the token contract address (should start with 0x)
{:address} is an Ethereum address (either an account or a contract, the address should start with 0x)
Possible options:

?limit={:transaction_limit} — limits the number of returned latest transactions associated with the address. Default is 100. Maximum is 10000.
?offset={:transaction_offset} — allows to paginate transactions. Default is 0, and the maximum is 1000000.
Output:

The structure is similar to the Ethereum address endpoint with the following differences:

It shows balances in tokens instead of ethers
Fields like first_seen_receiving mean "first seen receiving tokens" instead of "ethers"
Instead of the calls array, there's the transactions array with the latest token transactions (see this for field descriptions). It's iterable using the ?offset= section.
Context keys:

context.results — number of found addresses
context.limit — applied limit
context.offset — applied offset
context.state — best block height on the {:eth_chain} chain (tip: it's possible to calculate the number of confirmation block received using this formula: confirmations = block_id - context.state + 1)
context.state_layer_2 — the latest block number for which our engine has processed second layer (e.g. ERC-20) transactions. If it's less than the block id in your current environment (e.g. block id of a transaction you requested), it makes sense to repeat the request after some time to retrieve second layer data
Example request:

https://api.blockchair.com/ethereum/erc-20/0x68e14bb5a45b9681327e16e528084b9d962c1a39/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d
Example output:

https://api.blockchair.com/ethereum/erc-20/0x68e14bb5a45b9681327e16e528084b9d962c1a39/dashboards/address/0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d:

{
  "data": {
    "0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d": {
      "address": {
        "balance": "5000000000000000000",
        "balance_approximate": 5,
        "received": "5000000000000000000",
        "received_approximate": 5,
        "spent": "0",
        "spent_approximate": 0,
        "receiving_transaction_count": 1,
        "spending_transaction_count": 0,
        "transaction_count": 1,
        "first_seen_receiving": "2017-11-26 23:17:02",
        "last_seen_receiving": "2017-11-26 23:17:02",
        "first_seen_spending": null,
        "last_seen_spending": null
      },
      "transactions": [
        {
          "block_id": 4628318,
          "id": 17166097,
          "transaction_hash": "0xd3aeac286c429f581f056388e523726e7b42caeba1d6a8df591ea2ec30daad48",
          "time": "2017-11-26 23:17:02",
          "token_address": "0x68e14bb5a45b9681327e16e528084b9d962c1a39",
          "token_name": "en",
          "token_symbol": "CAT",
          "token_decimals": 18,
          "sender": "0x9f89388141c632c4c6f36d1060d5f50604ee3abc",
          "recipient": "0x3282791d6fd713f1e94f4bfd565eaa78b3a0599d",
          "value": "5000000000000000000",
          "value_approximate": 5
        }
      ]
    }
  },
  "context": {
    "code": 200,
    "limit": 100,
    "offset": 0,
    "results": 1,
    "state": 8805315,
    "state_layer_2": 8805304,
    ...
  }
}
Request cost formula:

Always 1
Cross-chain checks
Multichain address check
This endpoint allows to check multiple addresses from diffrerent blockchain via just one request. This can be useful if you're monitoring your own wallet or portfolio.

Endpoint:

`https://api.blockchair.com/multi/dashboards/addresses/{:address}₀,...,{:address}ᵩ
Where:

{:address}₀,...,{:address}ᵩ is a comma separated list of addresses in the blockchain:address format. Supported blockchains: bitcoin, bitcoin-cash, ethereum, litecoin, bitcoin-sv, dash, groestlcoin, zcash. More blockchains are coming in the future. bitcoin-cash and bitcoin-sv may be used as bitcoincash and bitcoinsv respectively. Only CashAddr format is supported for Bictoin Cash. The maximum number of addresses is 100. There can only be one Ethereum address in the list.
Output:

data.set — information on the entire set (total USD balance, etc.)
data.addresses — an array of info on addresses found
data.transactions — list of the latest transactions for this set (similar to ?transaction_details=true option for {:btc_chain}/dashboards/address endpoint)
Example output:

https://api.blockchair.com/multi/dashboards/addresses/bitcoin:1JADsmDFX9d2TXis63S9F9L8eDAXwJmnWE,ethereum:0x19DdD94B94D3c68385c897846AB44Ac99DBFAe0f,litecoin:LNAifc8nfjtDJ8azRPiancbZSBftPzhfzb,bitcoin:1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa:

{
  "data": {
    "set": {
      "address_count": 4,
      "balance_usd": 634530.2131392508,
      "received_usd": 195118.95799999998,
      "first_seen_receiving": "2009-01-03 18:15:05",
      "last_seen_receiving": "2020-06-26 18:10:58",
      "first_seen_spending": "2019-03-19 18:48:57",
      "last_seen_spending": "2020-06-08 17:48:18",
      "transaction_count": 3524
    },
    "addresses": {
      "bitcoin:1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa": {
        "chain": "bitcoin",
        "address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
        "type": "pubkeyhash",
        "script_hex": "76a91462e907b15cbf27d5425399ebf6f0fb50ebb88f1888ac",
        "balance": 6833161946,
        "balance_usd": 623983.1661066874,
        "received": 6833161946,
        "received_usd": 17068.6063,
        "spent": 0,
        "spent_usd": 0,
        "output_count": 2399,
        "unspent_output_count": 2399,
        "first_seen_receiving": "2009-01-03 18:15:05",
        "last_seen_receiving": "2020-07-18 12:16:28",
        "first_seen_spending": null,
        "last_seen_spending": null
      },
      "bitcoin:1JADsmDFX9d2TXis63S9F9L8eDAXwJmnWE": {
        "chain": "bitcoin",
        "address": "1JADsmDFX9d2TXis63S9F9L8eDAXwJmnWE",
        "type": "pubkeyhash",
        "script_hex": "76a914bc38a131c33427e977a9c08bcce726dd180eece888ac",
        "balance": 115220355,
        "balance_usd": 10521.5656354995,
        "received": 2117013594,
        "received_usd": 164984.9339,
        "spent": 2001793239,
        "spent_usd": 154273.1036,
        "output_count": 672,
        "unspent_output_count": 17,
        "first_seen_receiving": "2019-03-19 01:19:51",
        "last_seen_receiving": "2020-07-18 03:40:41",
        "first_seen_spending": "2019-03-19 18:48:57",
        "last_seen_spending": "2020-07-07 19:05:16"
      },
      "ethereum:0x19ddd94b94d3c68385c897846ab44ac99dbfae0f": {
        "chain": "ethereum",
        "address": "0x19ddd94b94d3c68385c897846ab44ac99dbfae0f",
        "type": "account",
        "contract_code_hex": null,
        "contract_created": null,
        "contract_destroyed": null,
        "balance": "108693390000000000",
        "balance_usd": 25.30068026881297,
        "received_approximate": "56446395000000000000",
        "received_usd": 12974.6457,
        "spent_approximate": "56327761000000000000",
        "spent_usd": 12937.1422,
        "fees_approximate": "9941000000000000",
        "fees_usd": 2.0446,
        "receiving_call_count": 83,
        "spending_call_count": 56,
        "call_count": 140,
        "transaction_count": 140,
        "first_seen_receiving": "2019-03-20 05:34:30",
        "last_seen_receiving": "2020-07-18 17:56:29",
        "first_seen_spending": "2019-03-20 14:26:51",
        "last_seen_spending": "2020-07-13 18:09:23",
        "nonce": null
      },
      "litecoin:LNAifc8nfjtDJ8azRPiancbZSBftPzhfzb": {
        "chain": "litecoin",
        "address": "LNAifc8nfjtDJ8azRPiancbZSBftPzhfzb",
        "type": "pubkeyhash",
        "script_hex": "76a914204bc7902ad5bfc5174b2c3d5162156695fb647888ac",
        "balance": 431305,
        "balance_usd": 0.18071679499999999,
        "received": 20914686144,
        "received_usd": 90.7721,
        "spent": 20914254839,
        "spent_usd": 92.6259,
        "output_count": 59,
        "unspent_output_count": 2,
        "first_seen_receiving": "2019-03-20 00:01:21",
        "last_seen_receiving": "2020-06-26 18:10:58",
        "first_seen_spending": "2019-03-20 00:41:49",
        "last_seen_spending": "2020-06-08 17:48:18"
      }
    },
    "transactions": [
      {
        "chain": "ethereum",
        "address": "0x19ddd94b94d3c68385c897846ab44ac99dbfae0f",
        "block_id": 10484912,
        "hash": "0x35198f37aa02245789fe8c377b2328fa665498981e0ff93909494602b7d3c592",
        "time": "2020-07-18 17:56:29",
        "balance_change": 1000000000000000
      },
      {
        "chain": "ethereum",
        "address": "0x19ddd94b94d3c68385c897846ab44ac99dbfae0f",
        "block_id": 10484558,
        "hash": "0x9e368758434651efdbf1be4a19ec3a90fc74c51a9bd3822957a7bf5e1c5734c2",
        "time": "2020-07-18 16:35:19",
        "balance_change": 413370000000000
      },
      {
        "chain": "bitcoin",
        "address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
        "block_id": -1,
        "hash": "43401f6f7da64a5bff65fba8b80bb98c9fa252bfc763a634cae5c616e5d89394",
        "time": "2020-07-18 12:16:28",
        "balance_change": 558
      },
      ...
    ]
  },
  "context": {
    "code": 200,
    "cache": {
      "live": true,
      "duration": 60,
      "since": "2020-07-18 18:07:03",
      "until": "2020-07-18 18:08:03",
      "time": null
    },
    "api": {
      "version": "2.0.63",
      "last_major_update": "2019-07-19 18:07:19",
      "next_major_update": "2020-07-19 00:00:00",
      "documentation": "https://blockchair.com/api/docs",
      "notice": "Beginning July 19th, 2020 we'll start enforcing request cost formulas, see the changelog for details"
    },
    "time": 0.330610990524292,
    "render_time": 0.010856151580810547,
    "full_time": 0.34146714210510254,
    "request_cost": 5.1
  }
}
Request cost formula:

The total cost is the same as if you'd use dashboards/addresses endpoints for the requested blockchains separately with the ?transaction_details=true option enabled. In the example, the cost is 5.1, and it's calculated as the sum of using the following endpoints:

https://api.blockchair.com/bitcoin/dashboards/addresses/1JADsmDFX9d2TXis63S9F9L8eDAXwJmnWE,1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa?transaction_details=true (cost: 2.1)
https://api.blockchair.com/ethereum/dashboards/address/0x19DdD94B94D3c68385c897846AB44Ac99DBFAe0f (cost: 1)
https://api.blockchair.com/litecoin/dashboards/addresses/LNAifc8nfjtDJ8azRPiancbZSBftPzhfzb?transaction_details=true (cost: 2)
Explorers
Aptos
Arbitrum One
Avalanche
Base
Beacon Chain
Bitcoin
Bitcoin Cash
BNB
BOB
Botanix
Cardano
Dash
DigiByte
Dogecoin
eCash
Ethereum
Ethereum Classic
Fantom
Gnosis Chain
Groestlcoin
Tether USD
USD Coin
Binance USD
Handshake
Kusama
Linea
Liquid Network
Litecoin
Monero
Moonbeam
opBNB
Optimism
Peercoin
Polkadot
Polygon
Polygon zkEVM
Rootstock
Sei EVM
Solana
Stellar
The Open Network
TRON
XRP Ledger
Zcash
Data
API
Datasets
Charts
ENS Lookup New
Services
Blockchair News
Blockchair Donut
Blockchair Awesome
Products
Transaction receipts
Wallet statements
Portfolio tracker
Broadcast transaction
Privacy-o-meter
Node explorers
Release monitor
Halving countdown
Compare blockchains
Get Blockchair extension
Useful links
About Blockchair
FAQ
Changelog
Careers
Terms of service
Privacy policy
Blockchair Onion v3 URL 
For partners
Partnerships
Advertise with us
Brand kit
For developers
Submit a bug or request
Bug bounty program
API documentation
Status
Social
Twitter
Telegram
GitHub
LinkedIn
Languages
English
Español
Français
Italiano
Nederlands
Português
Русский
中文
فارسی
Вahasa Indonesia
Türkçe
日本語
한국어
Deutsch
© 2025 Blockchair
Footer Blockchair logoNo 3d party trackers
Works without javascript
2.0.2-549-g245b7183c [72] Wed 19 Mar 2025 18:58:13 UTC –
